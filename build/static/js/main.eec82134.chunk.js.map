{"version":3,"sources":["logo.svg","components/Balance.js","App.js","reportWebVitals.js","index.js"],"names":["Balance","useState","balance","setBalance","useEffect","a","fetch","response","ok","json","console","error","getBalance","map","x","asset","account_id","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,G,MAAA,IAA0B,kC,6CC2B1BA,EAzBC,WACZ,MAA6BC,mBAAS,IAAtC,mBAAMC,EAAN,KAAeC,EAAf,KAoBA,OAlBAC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,+EAGYC,MAAM,gBAHlB,YAGLC,EAHK,QAICC,GAJD,gCAKYD,EAASE,OALrB,OAKDA,EALC,OAMPN,EAAWM,EAAKP,SANT,yDAUXQ,QAAQC,MAAR,MAVW,0DAAH,qDAchBC,KACD,IAEK,8BAAK,6BAAKV,EAAQW,KAAI,SAAAC,GAC1B,OAAO,+BAAwBA,EAAEZ,QAA1B,IAAoCY,EAAEC,QAA7BD,EAAEE,oBCEXC,MAtBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,cAAC,EAAD,IACA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eec82134.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from \"react\";\r\n\r\nconst Balance = () => {\r\n    const[balance, setBalance] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const getBalance = async () => {\r\n            try \r\n            {\r\n                const response = await fetch(\"/lunoBalance\");\r\n                if(response.ok) {\r\n                    const json = await response.json();\r\n                    setBalance(json.balance);\r\n                }\r\n            }\r\n            catch(error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        getBalance();\r\n    }, []);\r\n\r\n    return (<div><ul>{balance.map(x => {\r\n        return <li key={x.account_id}>{x.balance} {x.asset}</li>\r\n    })}</ul></div>)\r\n}\r\nexport default Balance;","import logo from './logo.svg';\nimport './App.css';\nimport Balance from './components/Balance';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <Balance></Balance>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}